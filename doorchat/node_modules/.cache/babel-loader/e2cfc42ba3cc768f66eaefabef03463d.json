{"ast":null,"code":"var _jsxFileName = \"/doorchat/src/chat/sidepanel/userinfo/UserInfo.js\",\n    _s = $RefreshSig$();\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { getDefaultNormalizer } from '@testing-library/react';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => {\n  return {\n    root: {\n      marginBottom: '40px'\n    },\n    name: {\n      fontFamily: theme.typography.h3.fontFamily,\n      margin: 0,\n      padding: '15px',\n      paddingLeft: '30px',\n      paddingBottom: '5px',\n      paddingTop: '30px'\n    },\n    online: {\n      margin: 0,\n      fontFamily: theme.typography.h3.fontFamily,\n      fontSize: '12px',\n      paddingLeft: '30px'\n    }\n  };\n});\n\nconst UserInfo = args => {\n  _s();\n\n  const classes = useStyles();\n  const [time, setTime] = useState(0);\n  const {\n    login\n  } = args;\n\n  const getTime = () => {\n    if (time < 60000) {\n      return 'Online for less than 1 minute.';\n    } else {\n      return `Online for ${Math.floor(time / 60000)} minutes.`;\n    }\n  };\n\n  useEffect(() => {\n    const startTime = Date.now();\n    const refreshInt = setInterval(() => {\n      setTime(Date.now() - startTime);\n    }, 5000); // Clean up interval\n\n    return () => {\n      clearInterval(refreshInt);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: classes.name,\n      children: login\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: classes.online,\n      children: getTime()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 12\n  }, this);\n};\n\n_s(UserInfo, \"I/HPCD12abeex6zlkloQtyJD/tU=\", false, function () {\n  return [useStyles];\n});\n\n_c = UserInfo;\nexport default UserInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserInfo\");","map":{"version":3,"sources":["/doorchat/src/chat/sidepanel/userinfo/UserInfo.js"],"names":["makeStyles","getDefaultNormalizer","useState","useEffect","useStyles","theme","root","marginBottom","name","fontFamily","typography","h3","margin","padding","paddingLeft","paddingBottom","paddingTop","online","fontSize","UserInfo","args","classes","time","setTime","login","getTime","Math","floor","startTime","Date","now","refreshInt","setInterval","clearInterval"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,0BAA3B;AACA,SAASC,oBAAT,QAAqC,wBAArC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAACK,KAAK,IAAI;AAClC,SAAO;AACHC,IAAAA,IAAI,EAAE;AACFC,MAAAA,YAAY,EAAE;AADZ,KADH;AAIHC,IAAAA,IAAI,EAAE;AACFC,MAAAA,UAAU,EAAEJ,KAAK,CAACK,UAAN,CAAiBC,EAAjB,CAAoBF,UAD9B;AAEFG,MAAAA,MAAM,EAAE,CAFN;AAGFC,MAAAA,OAAO,EAAE,MAHP;AAIFC,MAAAA,WAAW,EAAE,MAJX;AAKFC,MAAAA,aAAa,EAAE,KALb;AAMFC,MAAAA,UAAU,EAAE;AANV,KAJH;AAYHC,IAAAA,MAAM,EAAE;AACJL,MAAAA,MAAM,EAAC,CADH;AAEJH,MAAAA,UAAU,EAAEJ,KAAK,CAACK,UAAN,CAAiBC,EAAjB,CAAoBF,UAF5B;AAGJS,MAAAA,QAAQ,EAAE,MAHN;AAIJJ,MAAAA,WAAW,EAAE;AAJT;AAZL,GAAP;AAmBH,CApB2B,CAA5B;;AAsBA,MAAMK,QAAQ,GAAIC,IAAD,IAAU;AAAA;;AACvB,QAAMC,OAAO,GAAGjB,SAAS,EAAzB;AACA,QAAM,CAACkB,IAAD,EAAOC,OAAP,IAAkBrB,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM;AAAEsB,IAAAA;AAAF,MAAYJ,IAAlB;;AAEA,QAAMK,OAAO,GAAG,MAAM;AAClB,QAAIH,IAAI,GAAG,KAAX,EAAkB;AACd,aAAO,gCAAP;AACH,KAFD,MAEO;AAEH,aAAQ,cAAaI,IAAI,CAACC,KAAL,CAAWL,IAAI,GAAC,KAAhB,CAAuB,WAA5C;AACH;AACJ,GAPD;;AASAnB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMyB,SAAS,GAAGC,IAAI,CAACC,GAAL,EAAlB;AACA,UAAMC,UAAU,GAAGC,WAAW,CAAC,MAAK;AAChCT,MAAAA,OAAO,CAACM,IAAI,CAACC,GAAL,KAAaF,SAAd,CAAP;AACH,KAF6B,EAE3B,IAF2B,CAA9B,CAFY,CAMZ;;AACA,WAAO,MAAM;AACTK,MAAAA,aAAa,CAACF,UAAD,CAAb;AACH,KAFD;AAGH,GAVQ,EAUN,EAVM,CAAT;AAaA,sBAAO;AAAK,IAAA,SAAS,EAAEV,OAAO,CAACf,IAAxB;AAAA,4BACH;AAAI,MAAA,SAAS,EAAEe,OAAO,CAACb,IAAvB;AAAA,gBAA8BgB;AAA9B;AAAA;AAAA;AAAA;AAAA,YADG,eAEH;AAAM,MAAA,SAAS,EAAEH,OAAO,CAACJ,MAAzB;AAAA,gBAAkCQ,OAAO;AAAzC;AAAA;AAAA;AAAA;AAAA,YAFG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAIH,CA/BD;;GAAMN,Q;UACcf,S;;;KADde,Q;AAiCN,eAAeA,QAAf","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\nimport { getDefaultNormalizer } from '@testing-library/react';\nimport { useState, useEffect } from 'react';\n\nconst useStyles = makeStyles(theme => {\n    return {\n        root: {\n            marginBottom: '40px'\n        },\n        name: {\n            fontFamily: theme.typography.h3.fontFamily,\n            margin: 0,\n            padding: '15px',\n            paddingLeft: '30px',\n            paddingBottom: '5px',\n            paddingTop: '30px'\n        },\n        online: {\n            margin:0,\n            fontFamily: theme.typography.h3.fontFamily,\n            fontSize: '12px',\n            paddingLeft: '30px'\n        }\n    }\n})\n\nconst UserInfo = (args) => {\n    const classes = useStyles();\n    const [time, setTime] = useState(0);\n    const { login } = args;\n\n    const getTime = () => {\n        if (time < 60000) {\n            return 'Online for less than 1 minute.';\n        } else {\n\n            return `Online for ${Math.floor(time/60000)} minutes.`;\n        }\n    }\n\n    useEffect(() => {\n        const startTime = Date.now();\n        const refreshInt = setInterval(() =>{ \n            setTime(Date.now() - startTime);\n        }, 5000);\n\n        // Clean up interval\n        return () => {\n            clearInterval(refreshInt);\n        }\n    }, []);\n\n    \n    return <div className={classes.root}>\n        <h2 className={classes.name}>{login}</h2>\n        <span className={classes.online}>{getTime()}</span>\n    </div>\n}\n\nexport default UserInfo;"]},"metadata":{},"sourceType":"module"}